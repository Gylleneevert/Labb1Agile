    <h5>git init</h5>
    <p>initialize .git an existing directory as a git repository</p>
    <h5>git add</h5>
    <p>add a file as it looks now to your next commit</p>
    <h5>git reset</h5>
    <p>unstage a file while retaining the changes in working directory</p>
    <h5>git diff</h5>
    <p>diff of what is changed but not yet staged</p>
    <h5>git diff --staged</h5>
    <p>diff of what is staged but not commited</p>
    <h5>git commit -m"enter discription"</h5>
    <p>commit youre staged content as new commit snapshot</p>
    <h5>git pull</h5>
    <p>fetch and merge any commits from tracking remote branch</p>
    <h5> git push</h5>
    <p> transmit local branch commits to the remot repository branch</p>
    <h5>git clone [enter URL]</h5>
    <p>retrieve an entire repository from a hosted location via URL</p>
    <h5>git merge</h5>
    <p>merge a remote branch into your current branch to bring it up to date</p>
    <h5>git log</h5>
    <p>View the commit history of the repository, including commit messages, authors, and timestamps.</p>
    <h5>git remote rename</h5>
    <p>Rename a remote repository.</p>
    <h5>git remote set-url</h5>
    <p>Change the URL of a remote repository.</p>
    <h5>git push --force</h5>
    <p>Force push commits to the remote repository, overwriting its history.</p>
    <h5>git tag</h5>
    <p>List all tags in the repository. Adding a tag name after this command creates a new tag.</p>
    <h5>git tag -a</h5>
    <p>Create an annotated tag, including a message.</p>
    <h5>git tag -d</h5>
    <p>Delete a tag.</p>
    <h5>git clone --depth 1</h5>
    <p>Clone a repository with only the latest commit history, ignoring older commits.</p>
    <h5>git stash</h5>
    <p>Stash changes in the working directory to be applied later.</p>
    <h5>git stash list</h5>
    <p>List all stashed changes.</p>
    <h5>git stash apply</h5>
    <p>Apply the most recent stash to the working directory.</p>
    <h5>git stash pop</h5>
    <p>Apply the most recent stash and remove it from the stash list.</p>
    <h5>git cherry-pick</h5>
    <p>Apply the changes introduced by some existing commits.</p>
    <h5>git rebase</h5>
    <p>Reapply commits on top of another base tip.</p>
    <h5>git remote prune</h5>
    <p>Remove remote-tracking branches that no longer exist on the remote repository.</p>
    <h5>git clean -n</h5>
    <p>Show which files would be removed by a clean operation.</p>
    <h5>git bisect</h5>
    <p>Use binary search to find the commit that introduced a bug.</p>
    <h5>git reflog</h5>
    <p>Show a log of changes to the repository's HEAD.</p>